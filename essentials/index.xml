<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Essentials on Huy Le</title><link>https://www.huynle.com/essentials/</link><description>Recent content in Essentials on Huy Le</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://www.huynle.com/essentials/index.xml" rel="self" type="application/rss+xml"/><item><title>Vim Essentials</title><link>https://www.huynle.com/essentials/vim-essentials/</link><pubDate>Wed, 19 Apr 2017 10:39:25 -0700</pubDate><guid>https://www.huynle.com/essentials/vim-essentials/</guid><description>There are so many things to talk about Vim, this article is aimed to help you get you familiar with Vim by learning what the basic features and ability of Vim.
After using Vim for about a year now, there are a few things I wish I knew about Vim when I first made the commitment to jump over to this ancient looking editor; let me tell you, this text editor is anything be ancient.</description></item><item><title>SQL Basics</title><link>https://www.huynle.com/essentials/sql-basics/</link><pubDate>Fri, 07 Oct 2016 21:11:07 +0000</pubDate><guid>https://www.huynle.com/essentials/sql-basics/</guid><description>Introduction Relational databases are made from tables
SQL Standards
Code and Jargon Notes ; terminator and can be optional for some Dialects. also use as separator CAP vs cap SQL is not case sensitive. But to be portable, use &amp;lsquo;CAP&amp;rsquo; CODE here; -- comment here More recent SQL systems allow for &amp;ldquo;c-style&amp;rdquo; commenting /* comment */ for multiline Clauses are bite size code of a statement SELECT * FROM table -&amp;gt; clause 1; WHERE condition -&amp;gt; clause 2; Functions -&amp;gt; eg.</description></item><item><title>Starting NodeJS</title><link>https://www.huynle.com/essentials/starting-nodejs/</link><pubDate>Fri, 07 Oct 2016 21:11:07 +0000</pubDate><guid>https://www.huynle.com/essentials/starting-nodejs/</guid><description>What is node Up and Running A new key distinctions
nvm - Node version manager node - this is the main node engine npm - node package manager ~/.npmrc - configuration changes from global These three items are key to keeping a node environment together! It should be &amp;lsquo;noded&amp;rsquo; (lol), that there is a reason why nvm was created in the first place. This may be because the node engine changes from one revision to the next so often that manager is needed.</description></item><item><title>Linux Essentials</title><link>https://www.huynle.com/essentials/linux-essentials/</link><pubDate>Fri, 16 Sep 2016 02:25:38 +0000</pubDate><guid>https://www.huynle.com/essentials/linux-essentials/</guid><description>Linux Filesystem You got your swap, root and home partitions
swap - space on the hard drive use for virtual memory root -
LVM - Logical Volume Management Setting up system for backup and imaging - wiki
Create a snapshot of the current logical volume sudo lvcreate --size 10G -s -n p_nodered /dev/ubuntu-vg/root Do any modification to the filesystem If everything works as expected, remove the snapshot. Keeping it from growing!</description></item><item><title/><link>https://www.huynle.com/essentials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.huynle.com/essentials/</guid><description>Setting up PX4 Development Environment bash script to install everything Source stays in ~/src/Firmare Notes: After clone
ROS for PX4 Development Installing Notes catkin was not installed? had to intall manually to get px4 install script to work? install depedencies sudo apt-get install cmake python-catkin-pkg python-empy python-nose python-setuptools libgtest-dev build-essential SOLUTION: Catkin did not install because using zsh instead of bash. The python script assumed that we would be using bash to run.</description></item><item><title>Bash</title><link>https://www.huynle.com/essentials/bash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.huynle.com/essentials/bash/</guid><description>Bash Cheatsheet Working with Processes Command Notes pkill -f name_pattern Killing a process by name IO Redirection Redirection:: Capturing output from a file, command, program, script or even code block with a script and sending it as input to another file, command, program, of script
there are three default files, stdin, stdout, and stderror default files, and any other open files can be redirected stdin:: file descriptor of 0 stdout:: file descriptor of 1 stderr:: file descriptor of 2</description></item><item><title>Makefiles</title><link>https://www.huynle.com/essentials/makefiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.huynle.com/essentials/makefiles/</guid><description>Definitions Rule:: explain how/when to remake certain files. What shown above is a rule. Target:: Usually name of the file that is compiled. Can also be a command (with the use of PHONY) Dependencies:: files that are used to create the target Command:: The actions that get carried out
Basics Makefile Tells make how to compile and link a program Every changed source will be recompiled If header is changed, each source file containing the header will also be recompiled Any source file that has been recompiled will be saved, and linked to create a new executable Reading a Makefile Target gets defined first, the dependencies and then the commands</description></item><item><title>My Useful Commands</title><link>https://www.huynle.com/essentials/my-useful-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.huynle.com/essentials/my-useful-commands/</guid><description>My Useful Commands Commands Notes Nothing grep -rin &amp;quot;text here&amp;quot; . For recursive text search, that is case insensitive with line numbers Standards In/Out/Error STDIN (channel 0): Where your command draws the input from.</description></item></channel></rss>